{"version":3,"sources":["components/custom-button/button.jsx","components/custom-input/custom-input.jsx","components/custom-select/custom-select.jsx","components/checkboxes/checkboxes.jsx","components/user-form/user-form.jsx","components/price-card-modal/price-card-modal.jsx","components/price-card/price-card.style.js","components/utilities/constants.js","components/price-card/price-card.jsx","components/tab/tab.style.js","components/tab/tab.jsx","components/price-page/price-page.jsx","App.js","serviceWorker.js","index.js"],"names":["defaultStyle","display","justifyContent","transition","cursor","width","padding","fontWeight","fontSize","CustomButton","props","data-testid","style","className","classNames","solid","getClassNames","onClick","click","children","CustomInput","as","attrs","title","FormGroup","FormLabel","htmlFor","id","required","FormControl","CustomSelect","options","otherProps","Form","Label","map","option","index","key","CheckBox","Check","inline","type","defaultState","email","name","phoneno","noOfLeads","totalLeads","crm","noOfAgents","getObjectDataAsString","object","result","UserForm","leadSources","zillow","realtor","ylopo","others","howTheyKnowUs","google","facebook","friends","realClosers","handleLeadSourceChange","handleHowTheyKnowUsCB","handleInputChnage","event","setState","state","target","value","handleFormSubmit","preventDefault","Object","entries","alert","onHide","onSubmit","this","Row","planName","onChange","pattern","Col","source","label","Control","Component","PriceCardModel","Modal","aria-labelledby","backdrop","keyboard","size","Header","closeButton","Title","margin","Body","Container","head","backgroundColor","color","textTransform","marginBottom","bottom","largeFont","letterSpacing","mediumFont","marginTop","smallFont","separator","borderBottom","popularPriceCard","CONSTANTS","FILTER_PLAN_NAME","ENTERPRISE","SELECTED_INDEX","defaultProps","data","qualifiedLeadsPerMonth","pricePerLiveTransfer","totalQualifiedLeadPrice","totalPlatformPrice","finalPackagePrice","popular","PriceCard","incomingProps","useState","showModal","setModalState","show","onClose","isPopular","visibility","getPopularCardStyle","height","marginLeft","marginRight","tab","flex","tabBorder","borderRight","selectedTab","tabs","border","borderRadius","flexWrap","overflow","tabContent","Tabs","selectedIndex","setIndex","setChildren","useEffect","childrenClone","child","React","cloneElement","insideTabs","updateInsideTabsProp","Children","toArray","findIndex","reactElement","selected","findSelectedTabIndex","updateSelectedProp","getTabStyle","currentIndex","tabStyle","length","tabsStyle","getTabContent","tabDefaultProps","Tab","PricePage","getTabHeaders","tabHeaderSet","Set","item","add","averageHomePricePoint","Array","from","getTabData","header","filter","homePrice","mockdata","headers","planDetails","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a50b9600.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./button.scss\";\n\nconst defaultStyle = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  transition: \"all 0.1s\",\n  cursor: \"pointer\",\n  width: \"100%\",\n  padding: \"1rem\",\n  fontWeight: 500,\n  fontSize: \"1.1rem\",\n};\n\nconst CustomButton = (props) => {\n  const getClassNames = () => {\n    let classNames = \"orangeTheme\";\n    if (props.solid) {\n      classNames += \" solid\";\n    }\n    return classNames;\n  };\n  return (\n    <button\n      data-testid={props[\"data-testid\"]}\n      style={{ ...defaultStyle, ...props.style }}\n      className={getClassNames()}\n      onClick={props.click}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default CustomButton;\n","import React from \"react\";\nimport { FormGroup, FormLabel, FormControl } from \"react-bootstrap\";\n\nexport default function CustomInput(props) {\n  const { as, title, ...attrs } = props;\n  return (\n    <FormGroup as={as}>\n      <FormLabel htmlFor={props.id}>\n        {props.title}\n        {props.required ? \"*\" : \"\"}\n      </FormLabel>\n      <FormControl {...attrs} />\n    </FormGroup>\n  );\n}\n","import React from \"react\";\nimport { FormGroup, Form, FormControl } from \"react-bootstrap\";\nexport default function CustomSelect(props) {\n  const { title, as, id, options, ...otherProps } = props;\n  return (\n    <FormGroup as={as}>\n      <Form.Label htmlFor={id}>\n        {title}\n        {props.required ? \"*\" : \"\"}\n      </Form.Label>\n      <FormControl as=\"select\" {...otherProps}>\n        {options.map((option, index) => (\n          <option key={index}>{option}</option>\n        ))}\n      </FormControl>\n    </FormGroup>\n  );\n}\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nexport default function CheckBox(props) {\n  return <Form.Check inline {...props} type=\"checkbox\" />;\n}\n","import React, { Component } from \"react\";\nimport { Row, Col, Form, FormGroup, FormLabel } from \"react-bootstrap\";\nimport CustomInput from \"../custom-input/custom-input\";\nimport CustomSelect from \"../custom-select/custom-select\";\nimport CheckBox from \"../checkboxes/checkboxes\";\n\nconst defaultState = {\n  email: \"\",\n  name: \"\",\n  phoneno: \"\",\n  noOfLeads: 0,\n  totalLeads: 0,\n  crm: \"\",\n  noOfAgents: 0,\n};\n\nconst getObjectDataAsString = (object) => {\n  let result = \"\";\n  for (const key in object) {\n    if (object[key]) {\n      result += `${key} `;\n    }\n  }\n  return result;\n};\nexport default class UserForm extends Component {\n  leadSources = {\n    zillow: false,\n    realtor: false,\n    ylopo: false,\n    others: false,\n  };\n\n  howTheyKnowUs = {\n    google: false,\n    facebook: false,\n    email: false,\n    friends: false,\n    realClosers: false,\n  };\n  constructor(props) {\n    super(props);\n    this.state = defaultState;\n  }\n\n  handleLeadSourceChange = (key) => {\n    this.leadSources[key] = !this.leadSources[key];\n  };\n\n  handleHowTheyKnowUsCB = (key) => {\n    this.howTheyKnowUs[key] = !this.howTheyKnowUs[key];\n  };\n\n  handleInputChnage = (event) => {\n    this.setState({\n      ...this.state,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    let result = \"\";\n    for (const [key, value] of Object.entries(this.state)) {\n      result += `${key}: ${value}\\n`;\n    }\n    result += \"Lead Sources: \" + getObjectDataAsString(this.leadSources) + \"\\n\";\n    result +=\n      \"How they know about us: \" + getObjectDataAsString(this.howTheyKnowUs);\n    alert(result);\n    this.setState({\n      ...defaultState,\n    });\n    this.props.onHide();\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleFormSubmit}>\n        <Row>\n          <h5>Plan Selected:</h5>\n          <p>{this.props.planName}</p>\n        </Row>\n        <CustomInput\n          title=\"Name\"\n          type=\"text\"\n          onChange={this.handleInputChnage}\n          required\n          name=\"name\"\n          id=\"name\"\n          value={this.state.name}\n        />\n        <Form.Row>\n          <CustomInput\n            title=\"E-mail Address\"\n            type=\"email\"\n            value={this.state.email}\n            name=\"email\"\n            id=\"email\"\n            onChange={this.handleInputChnage}\n            pattern=\"(.+)@(.+){2,}\\.(.+){2,}\"\n            required\n            as={Col}\n          />\n          <CustomInput\n            type=\"tel\"\n            title=\"Phone No.\"\n            value={this.state.phoneno}\n            name=\"phoneno\"\n            id=\"phone\"\n            onChange={this.handleInputChnage}\n            pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\"\n            required\n            as={Col}\n          />\n        </Form.Row>\n        <Form.Row>\n          <CustomSelect\n            value={this.state.noOfLeads}\n            name=\"noOfLeads\"\n            id=\"noOfLeads\"\n            onChange={this.handleInputChnage}\n            options={[\"-\", 10, 20, 30, 40, 50]}\n            as={Col}\n            title=\"Number of leads you generate in a month\"\n          />\n          <CustomSelect\n            id=\"totalLeads\"\n            name=\"totalLeads\"\n            value={this.state.totalLeads}\n            onChange={this.handleInputChnage}\n            required\n            title=\"Total leads in your CRM\"\n            options={[\"-\", \"0-10\", \"10-20\", \"20-30\", \"30-40\"]}\n            as={Col}\n          />\n        </Form.Row>\n\n        <Form.Row>\n          <CustomSelect\n            title=\"Which CRM Do you use?\"\n            as={Col}\n            id=\"crm\"\n            name=\"crm\"\n            value={this.state.crm}\n            onChange={this.handleInputChnage}\n            options={[\"-\", \"Squad\", \"Insigthly\", \"Salesforce\"]}\n          />\n          <CustomSelect\n            title=\"No. of Agents\"\n            as={Col}\n            id=\"noOfAgents\"\n            name=\"noOfAgents\"\n            value={this.state.noOfAgents}\n            onChange={this.handleInputChnage}\n            options={[\"-\", 1, 2, 3, 4, 5]}\n          />\n        </Form.Row>\n\n        <Form.Row>\n          <FormLabel>What are your biggest lead sources?</FormLabel>\n        </Form.Row>\n        <Form.Row>\n          <FormGroup>\n            {[\"zillow\", \"realtor\", \"ylopo\", \"others\"].map((source, index) => (\n              <CheckBox\n                key={index}\n                id={source}\n                label={source}\n                onChange={() => this.handleLeadSourceChange(source)}\n              />\n            ))}\n          </FormGroup>\n        </Form.Row>\n\n        <Form.Row>\n          <FormLabel>How did you hear about us</FormLabel>\n        </Form.Row>\n\n        <Form.Row>\n          {[\"google\", \"facebook\", \"email\", \"friends\", \"realClosers\"].map(\n            (source, index) => (\n              <CheckBox\n                key={index}\n                id={source}\n                label={source}\n                onChange={() => this.handleHowTheyKnowUsCB(source)}\n              />\n            )\n          )}\n        </Form.Row>\n        <Form.Row>\n          <Form.Control type=\"submit\" className=\"btn btn-primary\" />\n        </Form.Row>\n      </Form>\n    );\n  }\n}\n","import React from \"react\";\nimport { Modal, Container } from \"react-bootstrap\";\nimport UserForm from \"../user-form/user-form\";\n\nfunction PriceCardModel(props) {\n  return (\n    <Modal\n      {...props}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      backdrop=\"static\"\n      keyboard={false}\n      size=\"lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title\n          id=\"contained-modal-title-vcenter\"\n          style={{ margin: \"auto\" }}\n        >\n          Get started with SquadVoice\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"show-grid\">\n        <Container>\n          <UserForm {...props} />\n        </Container>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default PriceCardModel;\n","export const head = {\n  backgroundColor: \"#5A6F90\",\n  padding: \"1rem\",\n  color: \"white\",\n  textTransform: \"capitalize\",\n  marginBottom: \"0.5rem\",\n  display: \"flex\",\n  justifyContent: \"center\",\n};\n\nexport const bottom = { ...head };\n\nexport const largeFont = {\n  fontSize: \"2rem\",\n  fontWeight: \"600\",\n  letterSpacing: \"1px\",\n};\n\nexport const mediumFont = {\n  fontSize: \"1.2rem\",\n  fontWeight: \"500\",\n  marginTop: \"-5px\",\n  marginBottom: \"0.5rem\",\n};\n\nexport const smallFont = {\n  fontSize: \"0.9rem\",\n  margin: \"15px 0 15px 0\",\n};\n\nexport const separator = {\n  borderBottom: \"2px dashed lightgrey\",\n  margin: \"0 5px 0 5px\",\n};\n\nexport const popularPriceCard = {\n  backgroundColor: \"rgb(222, 99, 67)\",\n  color: \"#FFF\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  padding: \"1rem\",\n};\n","const CONSTANTS = {\n  FILTER_PLAN_NAME: \"Qualified 60\", // Enter the name of the tab you don't want to show on the page\n  ENTERPRISE: \"Enterprise\",\n  SELECTED_INDEX: 2, // Enter your selected Index here.\n};\n\nexport default CONSTANTS;\n","import React, { useState } from \"react\";\nimport CustomButton from \"../custom-button/button\";\nimport PriceCardModal from \"../price-card-modal/price-card-modal\";\nimport {\n  bottom,\n  head,\n  largeFont,\n  mediumFont,\n  popularPriceCard,\n  separator,\n  smallFont,\n} from \"./price-card.style\";\nimport CONSTANTS from \"../utilities/constants\";\nimport \"./price-card.scss\";\n\n// Set default values.\nconst defaultProps = {\n  data: {\n    planName: \"\",\n    qualifiedLeadsPerMonth: 0,\n    pricePerLiveTransfer: \"\",\n    totalQualifiedLeadPrice: \"\",\n    totalPlatformPrice: \"\",\n    finalPackagePrice: \"\",\n    popular: false,\n  },\n};\n\nconst PriceCard = (incomingProps) => {\n  // add all the props in one object.\n  const props = {\n    ...defaultProps,\n    ...incomingProps,\n  };\n\n  // set a state object.\n  const [showModal, setModalState] = useState(false);\n\n  // Set popular card style to cards.\n  const getPopularCardStyle = (isPopular) => {\n    let style = { ...popularPriceCard };\n    if (!isPopular) {\n      style = { ...style, visibility: \"hidden\" };\n    }\n    return style;\n  };\n\n  // destructure object to use directly.\n  const {\n    style,\n    data: { planName },\n  } = props;\n\n  return (\n    <>\n      <div style={style} className=\"col-xs-12 col-md-3\">\n        <PriceCardModal\n          planName={planName}\n          show={showModal}\n          onClose={() => setModalState(false)}\n        />\n        <div style={getPopularCardStyle(props.data.popular)}>Most Popular!</div>\n        <div style={head} data-testid=\"plan-name\">\n          {planName}\n        </div>\n        <div\n          style={{\n            display: planName === CONSTANTS.ENTERPRISE ? \"block\" : \"none\",\n            height: \"7em\",\n          }}\n        >\n          <p className=\"enterprise-box\">\n            Want more than 80 qualified leads each month?\n          </p>\n        </div>\n        <div\n          className=\"container\"\n          style={{\n            visibility:\n              planName === CONSTANTS.ENTERPRISE ? \"hidden\" : \"visible\",\n          }}\n        >\n          <center>\n            <div style={{ ...largeFont }} data-testid=\"price-per-live-transfer\">\n              {props.data.pricePerLiveTransfer}\n            </div>\n            <div style={smallFont}>Per Qualified lead</div>\n            <div style={separator} />\n            <div style={smallFont}> Qualified Leads Per Month</div>\n            <div style={mediumFont} data-testid=\"qualified-leads-per-month\">\n              {props.data.qualifiedLeadsPerMonth}\n            </div>\n            <div style={separator} />\n            <div style={smallFont}>Platform Fee Per Month</div>\n            <div style={mediumFont} data-testid=\"total-platform-price\">\n              {props.data.totalPlatformPrice}\n            </div>\n\n            <div\n              style={{\n                ...bottom,\n                ...mediumFont,\n                fontWeight: 600,\n                marginLeft: \"-15px\",\n                marginRight: \"-15px\",\n              }}\n              data-testid=\"final-package-price\"\n            >\n              {props.data.finalPackagePrice}/mo\n            </div>\n          </center>\n        </div>\n        <CustomButton\n          solid={props.data.popular ? true : false}\n          click={() => setModalState(true)}\n        >\n          {planName === CONSTANTS.ENTERPRISE\n            ? \"Get In Touch\"\n            : \"Start Your Trial\"}\n        </CustomButton>\n      </div>\n      <PriceCardModal\n        planName={planName}\n        show={showModal}\n        onHide={() => setModalState(false)}\n      />\n    </>\n  );\n};\n\nexport default PriceCard;\n","export const tab = {\n  padding: \"1rem\",\n  fontWeight: 600,\n  flex: 1,\n  display: \"flex\",\n  justifyContent: \"center\",\n  cursor: \"pointer\",\n};\n\nexport const tabBorder = {\n  borderRight: \"2px solid #D1D1D1\",\n};\n\nexport const roundBorder = {\n  border: \"1rem solid transparent\",\n};\n\nexport const selectedTab = {\n  backgroundColor: \"#5A6F90\",\n  color: \"#FFF\",\n};\n\nexport const tabs = {\n  display: \"flex\",\n  border: \"1px solid transparent\",\n  borderRadius: \"0.5rem\",\n  backgroundColor: \"#F8F8F8\",\n  flexWrap: \"wrap\",\n  marginBottom: \"2rem\",\n  overflow: \"hidden\",\n  margin: \"80px 10px\",\n};\n\nexport const tabContent = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  tab as tabStyle,\n  tabs as tabsStyle,\n  tabBorder,\n  selectedTab,\n  tabContent,\n} from \"./tab.style\";\nimport \"./tab.scss\";\n\nconst Tabs = (incomingProps) => {\n  const props = { ...incomingProps };\n  const [selectedIndex, setIndex] = useState(0);\n  const [children, setChildren] = useState(props.children);\n\n  const updateInsideTabsProp = (children) => {\n    const childrenClone = children.map((child) =>\n      React.cloneElement(child, { insideTabs: true })\n    );\n    setChildren(childrenClone);\n  };\n\n  const findSelectedTabIndex = (children) => {\n    const isTabSelected = (reactElement) => reactElement.props.selected;\n    const childrenArray = React.Children.toArray(children);\n    return childrenArray.findIndex(isTabSelected);\n  };\n\n  useEffect(() => {\n    updateInsideTabsProp(props.children);\n    const index = findSelectedTabIndex(props.children);\n    if (index > -1) {\n      setIndex(index);\n    }\n  }, [props.children]);\n\n  const getTabContent = (children) => {\n    return children.map(updateSelectedProp);\n  };\n\n  const updateSelectedProp = (child, index) => {\n    let childClone = child;\n    if (selectedIndex === index) {\n      childClone = React.cloneElement(child, { selected: true, key: index });\n      return childClone;\n    }\n    childClone = React.cloneElement(child, { selected: false, key: index });\n    return childClone;\n  };\n\n  const getTabStyle = (children, currentIndex) => {\n    let style = { ...tabStyle };\n\n    if (currentIndex !== children.length - 1) {\n      style = { ...style, ...tabBorder };\n    }\n\n    if (currentIndex === selectedIndex) {\n      style = { ...style, ...selectedTab };\n    }\n\n    return style;\n  };\n\n  return (\n    <>\n      <div style={{ ...tabsStyle }}>\n        {children.map((tab, index) => (\n          <span\n            className=\"tab\"\n            style={getTabStyle(children, index)}\n            key={index}\n            onClick={() => setIndex(index)}\n          >\n            {tab.props.name}\n          </span>\n        ))}\n      </div>\n\n      {getTabContent(children).map((child) => child)}\n    </>\n  );\n};\n\nconst tabDefaultProps = {\n  name: \"\",\n  selected: true,\n  insideTabs: false,\n};\n\nconst Tab = (incomingProps) => {\n  const props = { ...tabDefaultProps, ...incomingProps };\n\n  return (\n    <>\n      {!props.insideTabs && <span>{props.name}</span>}\n      <div style={tabContent}>{props.selected && props.children}</div>\n    </>\n  );\n};\n\nexport { Tabs, Tab };\n","import React, { Component } from \"react\";\nimport PriceCard from \"../price-card/price-card\";\nimport { Tab, Tabs } from \"../tab/tab\";\nimport mockdata from \"../../mockdata/data.json\";\nimport CONSTANTS from \"../utilities/constants\";\nimport \"./price-page.scss\";\n\n/**\n * The page will show main content of the website which includes different price ranges and Plans based on chosen categories.\n */\nexport default class PricePage extends Component {\n  /**\n   * Constructor.\n   */\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n    };\n  }\n\n  /**\n   * Set the data here, for this case we have static data.\n   */\n  componentDidMount() {\n    this.setState({ data: mockdata });\n  }\n\n  // Get tabs header text array\n  getTabHeaders = () => {\n    const tabHeaderSet = new Set();\n    for (const item of this.state.data) {\n      tabHeaderSet.add(item.averageHomePricePoint);\n    }\n    return Array.from(tabHeaderSet);\n  };\n\n  /**\n   * filter tab data of header from data collection\n   * @param {string} header - text of header\n   */\n  getTabData = (header) => {\n    return this.state.data.filter(\n      (homePrice) => homePrice.averageHomePricePoint === header\n    );\n  };\n\n  render() {\n    const headers = this.getTabHeaders();\n    return (\n      <Tabs>\n        {headers.map((header, index) => (\n          <Tab\n            key={index}\n            name={header}\n            selected={index === CONSTANTS.SELECTED_INDEX}\n            className={\n              index === 0 || index === headers.length - 1\n                ? \"rounded-border\"\n                : \"\"\n            }\n          >\n            {this.getTabData(header)\n              .filter(\n                ({ planDetails: { planName } }) =>\n                  planName !== CONSTANTS.FILTER_PLAN_NAME\n              )\n              .map((data, index) => (\n                <PriceCard key={index} data={data.planDetails} />\n              ))}\n            {\n              <PriceCard /* Enterprise Card which is an outlier. */\n                data={{\n                  planName: \"Enterprise\",\n                }}\n                className=\"price-card\"\n              />\n            }\n          </Tab>\n        ))}\n      </Tabs>\n    );\n  }\n}\n","import React from \"react\";\nimport PricePage from \"./components/price-page/price-page\";\n/**\n * Main Page.\n */\nfunction App() {\n  return (\n    <div style={{ margin: \"50px\" }}>\n      <PricePage className=\"main-box\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// Importing the Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}