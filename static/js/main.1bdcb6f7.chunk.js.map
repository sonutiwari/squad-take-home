{"version":3,"sources":["components/custom-button/button.jsx","components/custom-input/custom-input.jsx","components/custom-select/custom-select.jsx","components/checkboxes/checkboxes.jsx","components/utilities/utility-methods.js","components/user-form/user-form.jsx","components/price-card-modal/price-card-modal.jsx","components/price-card/price-card.style.js","components/utilities/constants.js","components/price-card/price-card.jsx","components/tab/tab.style.js","components/tab/tab.jsx","components/price-page/price-page.jsx","App.js","serviceWorker.js","index.js"],"names":["defaultStyle","display","justifyContent","transition","cursor","width","padding","fontWeight","fontSize","CustomButton","props","react_default","a","createElement","data-testid","style","Object","objectSpread","className","concat","classNames","solid","getClassNames","onClick","click","children","CustomInput","as","attrs","title","objectWithoutProperties","FormGroup","FormLabel","htmlFor","id","required","class","FormControl","assign","placeholder","toTitleCase","name","phrase","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","CustomSelect","options","otherProps","Form","Label","option","index","key","CheckBox","Check","inline","type","getObjectDataAsString","object","result","defaultState","email","phoneno","noOfLeads","totalLeads","crm","noOfAgents","UserForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","leadSources","zillow","realtor","ylopo","others","howTheyKnowUs","google","facebook","friends","realClosers","handleLeadSourceChange","handleHowTheyKnowUsCB","handleInputChnage","event","setState","state","defineProperty","target","value","handleFormSubmit","preventDefault","_i","_Object$entries","entries","length","_ref3","_ref2","slicedToArray","alert","onHide","_this2","onSubmit","Row","planName","onChange","pattern","Col","source","_Object$keys","keys","label","_Object$keys3","Control","margin","backgroundColor","color","Component","PriceCardModel","Modal","aria-labelledby","backdrop","keyboard","size","Header","closeButton","Title","Body","Container","user_form_UserForm","head","textTransform","marginBottom","bottom","largeFont","letterSpacing","mediumFont","marginTop","smallFont","separator","borderBottom","popularPriceCard","CONSTANTS","FILTER_PLAN_NAME","ENTERPRISE","SELECTED_INDEX","defaultProps","data","qualifiedLeadsPerMonth","pricePerLiveTransfer","totalQualifiedLeadPrice","totalPlatformPrice","finalPackagePrice","popular","PriceCard","incomingProps","_useState","useState","_useState2","showModal","setModalState","Fragment","show","isPopular","visibility","getPopularCardStyle","height","marginLeft","marginRight","components_custom_button_button","tab","flex","tabBorder","borderRight","selectedTab","tabs","border","borderRadius","flexWrap","overflow","tabContent","Tabs","selectedIndex","setIndex","_useState3","_useState4","setChildren","useEffect","childrenClone","child","React","cloneElement","insideTabs","updateInsideTabsProp","Children","toArray","findIndex","reactElement","selected","updateSelectedProp","getTabStyle","currentIndex","tabStyle","tabsStyle","getTabContent","tabDefaultProps","Tab","PricePage","getTabHeaders","_step","tabHeaderSet","Set","_iterator","_createForOfIteratorHelper","s","n","done","item","add","averageHomePricePoint","err","e","f","Array","from","getTabData","header","filter","homePrice","fetch","then","json","catch","console","error","message","_this3","headers","tab_Tabs","tab_Tab","_ref","planDetails","components_price_card_price_card","App","price_page_PricePage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4WAGMA,SAAe,CACnBC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WACZC,OAAQ,UACRC,MAAO,OACPC,QAAS,OACTC,WAAY,IACZC,SAAU,WA4BGC,EApBM,SAACC,GAQpB,OACEC,EAAAC,EAAAC,cAAA,UACEC,cAAaJ,EAAM,eACnBK,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAOhB,EAAiBU,EAAMK,OACnCG,UAAS,GAAAC,OAXS,WACpB,IAAIC,EAAa,cAIjB,OAHIV,EAAMW,QACRD,GAAc,UAETA,EAMSE,GAAL,SACTC,QAASb,EAAMc,OAEdd,EAAMe,2FC3BE,SAASC,EAAYhB,GAAO,IACjCiB,EAAwBjB,EAAxBiB,GAAcC,GAAUlB,EAApBmB,MAD6Bb,OAAAc,EAAA,EAAAd,CACTN,EADS,iBAEzC,OACEC,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAWJ,GAAIA,GACbhB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAWC,QAASvB,EAAMwB,IACvBxB,EAAMmB,MACNnB,EAAMyB,SAAWxB,EAAAC,EAAAC,cAAA,QAAMuB,MAAM,eAAZ,KAAqC,IAEzDzB,EAAAC,EAAAC,cAACwB,EAAA,EAADrB,OAAAsB,OAAA,GAAiBV,EAAjB,CAAwBW,YAAaC,EAAYZ,EAAMa,UAU7D,IAAMD,EAAc,SAACE,GACnB,OAAOA,EACJC,cACAC,MAAM,KACNC,IAAI,SAACC,GAAD,OAAUA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,KACxDC,KAAK,MCtBK,SAASC,EAAazC,GAAO,IAClCmB,EAA0CnB,EAA1CmB,MAAOF,EAAmCjB,EAAnCiB,GAAIO,EAA+BxB,EAA/BwB,GAAIkB,EAA2B1C,EAA3B0C,QAAYC,EADOrC,OAAAc,EAAA,EAAAd,CACQN,EADR,+BAE1C,OACEC,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAWJ,GAAIA,GACbhB,EAAAC,EAAAC,cAACyC,EAAA,EAAKC,MAAN,CAAYtB,QAASC,GAClBL,EACAnB,EAAMyB,SAAW,IAAM,IAE1BxB,EAAAC,EAAAC,cAACwB,EAAA,EAADrB,OAAAsB,OAAA,CAAaX,GAAG,UAAa0B,GAC1BD,EAAQP,IAAI,SAACW,EAAQC,GAAT,OACX9C,EAAAC,EAAAC,cAAA,UAAQ6C,IAAKD,GAAQD,OCVhB,SAASG,EAASjD,GAC/B,OAAOC,EAAAC,EAAAC,cAACyC,EAAA,EAAKM,MAAN5C,OAAAsB,OAAA,CAAYuB,QAAM,GAAKnD,EAAvB,CAA8BoD,KAAK,cCHrC,IAAMC,EAAwB,SAACC,GACpC,IAAIC,EAAS,GACb,IAAK,IAAMP,KAAOM,EACZA,EAAON,KACTO,GAAM,GAAA9C,OAAOuC,EAAP,MAGV,OAAOO,GCLHC,EAAe,CACnBC,MAAO,GACP1B,KAAM,GACN2B,QAAS,GACTC,UAAW,EACXC,WAAY,EACZC,IAAK,GACLC,WAAY,GAGOC,cAkBnB,SAAAA,EAAY/D,GAAO,IAAAgE,EAAA,OAAA1D,OAAA2D,EAAA,EAAA3D,CAAA4D,KAAAH,IACjBC,EAAA1D,OAAA6D,EAAA,EAAA7D,CAAA4D,KAAA5D,OAAA8D,EAAA,EAAA9D,CAAAyD,GAAAM,KAAAH,KAAMlE,KAjBRsE,YAAc,CACZC,QAAQ,EACRC,SAAS,EACTC,OAAO,EACPC,QAAQ,GAYSV,EARnBW,cAAgB,CACdC,QAAQ,EACRC,UAAU,EACVpB,OAAO,EACPqB,SAAS,EACTC,aAAa,GAGIf,EAKnBgB,uBAAyB,SAAChC,GACxBgB,EAAKM,YAAYtB,IAAQgB,EAAKM,YAAYtB,IANzBgB,EASnBiB,sBAAwB,SAACjC,GACvBgB,EAAKW,cAAc3B,IAAQgB,EAAKW,cAAc3B,IAV7BgB,EAiBnBkB,kBAAoB,SAACC,GACnBnB,EAAKoB,SAAL9E,OAAAC,EAAA,EAAAD,CAAA,GACK0D,EAAKqB,MADV/E,OAAAgF,EAAA,EAAAhF,CAAA,GAEG6E,EAAMI,OAAOxD,KAAOoD,EAAMI,OAAOC,UApBnBxB,EA4BnByB,iBAAmB,SAACN,GAClBA,EAAMO,iBAEN,IADA,IAAInC,EAAS,GACboC,EAAA,EAAAC,EAA2BtF,OAAOuF,QAAQ7B,EAAKqB,OAA/CM,EAAAC,EAAAE,OAAAH,IAAuD,KAAAI,EAAAH,EAAAD,GAAAK,EAAA1F,OAAA2F,EAAA,EAAA3F,CAAAyF,EAAA,GAA3C/C,EAA2CgD,EAAA,GAAtCR,EAAsCQ,EAAA,GACrDzC,GAAM,GAAA9C,OAAOuC,EAAP,MAAAvC,OAAe+E,EAAf,MAERjC,GAAU,iBAAmBF,EAAsBW,EAAKM,aAAe,KACvEf,GACE,2BAA6BF,EAAsBW,EAAKW,eAC1DuB,MAAM3C,GACNS,EAAKoB,SAAL9E,OAAAC,EAAA,EAAAD,CAAA,GACKkD,IAELQ,EAAKhE,MAAMmG,UAvCXnC,EAAKqB,MAAQ7B,EAFIQ,wEA4CV,IAAAoC,EAAAlC,KACP,OACEjE,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAMyD,SAAUnC,KAAKuB,kBACnBxF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,KACErG,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QAAQ0D,KAAKlE,MAAMuG,WAElCtG,EAAAC,EAAAC,cAACa,EAAD,CACEG,MAAM,OACNiC,KAAK,OACLoD,SAAUtC,KAAKgB,kBACfzD,UAAQ,EACRM,KAAK,OACLP,GAAG,OACHgE,MAAOtB,KAAKmB,MAAMtD,OAEpB9B,EAAAC,EAAAC,cAACyC,EAAA,EAAK0D,IAAN,KACErG,EAAAC,EAAAC,cAACa,EAAD,CACEG,MAAM,iBACNiC,KAAK,QACLoC,MAAOtB,KAAKmB,MAAM5B,MAClB1B,KAAK,QACLP,GAAG,QACHgF,SAAUtC,KAAKgB,kBACfuB,QAAQ,2BACRhF,UAAQ,EACRR,GAAIyF,MAENzG,EAAAC,EAAAC,cAACa,EAAD,CACEoC,KAAK,MACLjC,MAAM,YACNqE,MAAOtB,KAAKmB,MAAM3B,QAClB3B,KAAK,UACLP,GAAG,QACHgF,SAAUtC,KAAKgB,kBACfuB,QAAQ,2BACRhF,UAAQ,EACRR,GAAIyF,OAGRzG,EAAAC,EAAAC,cAACyC,EAAA,EAAK0D,IAAN,KACErG,EAAAC,EAAAC,cAACsC,EAAD,CACE+C,MAAOtB,KAAKmB,MAAM1B,UAClB5B,KAAK,YACLP,GAAG,YACHgF,SAAUtC,KAAKgB,kBACfxC,QAAS,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,IAC/BzB,GAAIyF,IACJvF,MAAM,4CAERlB,EAAAC,EAAAC,cAACsC,EAAD,CACEjB,GAAG,aACHO,KAAK,aACLyD,MAAOtB,KAAKmB,MAAMzB,WAClB4C,SAAUtC,KAAKgB,kBACf/D,MAAM,0BACNuB,QAAS,CAAC,IAAK,OAAQ,QAAS,QAAS,SACzCzB,GAAIyF,OAIRzG,EAAAC,EAAAC,cAACyC,EAAA,EAAK0D,IAAN,KACErG,EAAAC,EAAAC,cAACsC,EAAD,CACEtB,MAAM,wBACNF,GAAIyF,IACJlF,GAAG,MACHO,KAAK,MACLyD,MAAOtB,KAAKmB,MAAMxB,IAClB2C,SAAUtC,KAAKgB,kBACfxC,QAAS,CAAC,IAAK,QAAS,YAAa,gBAEvCzC,EAAAC,EAAAC,cAACsC,EAAD,CACEtB,MAAM,gBACNF,GAAIyF,IACJlF,GAAG,aACHO,KAAK,aACLyD,MAAOtB,KAAKmB,MAAMvB,WAClB0C,SAAUtC,KAAKgB,kBACfxC,QAAS,CAAC,IAAK,EAAG,EAAG,EAAG,EAAG,MAI/BzC,EAAAC,EAAAC,cAACyC,EAAA,EAAK0D,IAAN,KACErG,EAAAC,EAAAC,cAACmB,EAAA,EAAD,6CAEFrB,EAAAC,EAAAC,cAACyC,EAAA,EAAK0D,IAAN,KACErG,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KACG,CACC,CAAEkD,OAAQ,UACV,CAAEC,QAAS,WACX,CAAEC,MAAO,SACT,CAAEC,OAAQ,WACVvC,IAAI,SAACwE,EAAQ5D,GAAU,IAAA6D,EACTtG,OAAOuG,KAAKF,GAAnB3D,EADgB1C,OAAA2F,EAAA,EAAA3F,CAAAsG,EAAA,MAEvB,OACE3G,EAAAC,EAAAC,cAAC8C,EAAD,CACED,IAAKD,EACLvB,GAAIwB,EACJ8D,MAAOH,EAAO3D,GACdwD,SAAU,kBAAMJ,EAAKpB,uBAAuBhC,UAOtD/C,EAAAC,EAAAC,cAACyC,EAAA,EAAK0D,IAAN,KACErG,EAAAC,EAAAC,cAACmB,EAAA,EAAD,mCAGFrB,EAAAC,EAAAC,cAACyC,EAAA,EAAK0D,IAAN,KACG,CACC,CAAE1B,OAAQ,UACV,CAAEC,SAAU,YACZ,CAAEpB,MAAO,SACT,CAAEqB,QAAS,WACX,CAAEC,YAAa,iBACf5C,IAAI,SAACwE,EAAQ5D,GAAU,IAAAgE,EACTzG,OAAOuG,KAAKF,GAAnB3D,EADgB1C,OAAA2F,EAAA,EAAA3F,CAAAyG,EAAA,MAEvB,OACE9G,EAAAC,EAAAC,cAAC8C,EAAD,CACED,IAAKD,EACLvB,GAAIwB,EACJ8D,MAAOH,EAAO3D,GACdwD,SAAU,kBAAMJ,EAAKnB,sBAAsBjC,SAKnD/C,EAAAC,EAAAC,cAACyC,EAAA,EAAK0D,IAAN,KACErG,EAAAC,EAAAC,cAACyC,EAAA,EAAKoE,QAAN,CACE5D,KAAK,SACL5C,UAAU,WACVH,MAAO,CACLV,MAAO,cACPsH,OAAQ,OACRC,gBAAiB,UACjBC,MAAO,mBAvMiBC,mBCTvB,SAASC,EAAerH,GACrC,OACEC,EAAAC,EAAAC,cAACmH,EAAA,EAADhH,OAAAsB,OAAA,GACM5B,EADN,CAEEuH,kBAAgB,gCAChBC,SAAS,SACTC,UAAU,EACVC,KAAK,OAELzH,EAAAC,EAAAC,cAACmH,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACvB3H,EAAAC,EAAAC,cAACmH,EAAA,EAAMO,MAAP,CACErG,GAAG,gCACHhB,UAAU,iBAEVP,EAAAC,EAAAC,cAAA,2CAGJF,EAAAC,EAAAC,cAACmH,EAAA,EAAMQ,KAAP,CAAYtH,UAAU,aACpBP,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,KACE9H,EAAAC,EAAAC,cAAC6H,EAAahI,MC5BjB,IAAMiI,EAAO,CAClBf,gBAAiB,UACjBtH,QAAS,OACTuH,MAAO,QACPe,cAAe,aACfC,aAAc,SACd5I,QAAS,OACTC,eAAgB,UAGL4I,EAAM9H,OAAAC,EAAA,EAAAD,CAAA,GAAQ2H,GAEdI,EAAY,CACvBvI,SAAU,OACVD,WAAY,MACZyI,cAAe,OAGJC,EAAa,CACxBzI,SAAU,SACVD,WAAY,MACZ2I,UAAW,OACXL,aAAc,UAGHM,EAAY,CACvB3I,SAAU,SACVmH,OAAQ,iBAGGyB,EAAY,CACvBC,aAAc,uBACd1B,OAAQ,eAGG2B,EAAmB,CAC9B1B,gBAAiB,mBACjBC,MAAO,OACP5H,QAAS,OACTC,eAAgB,SAChBI,QAAS,QClCIiJ,EANG,CAChBC,iBAAkB,eAClBC,WAAY,aACZC,eAAgB,GCaZC,SAAe,CACnBC,KAAM,CACJ3C,SAAU,GACV4C,uBAAwB,EACxBC,qBAAsB,GACtBC,wBAAyB,GACzBC,mBAAoB,GACpBC,kBAAmB,GACnBC,SAAS,KAuHEC,EAnHG,SAACC,GAEjB,IAAM1J,EAAKM,OAAAC,EAAA,EAAAD,CAAA,GACN2I,EACAS,GAJ8BC,EAQAC,oBAAS,GARTC,EAAAvJ,OAAA2F,EAAA,EAAA3F,CAAAqJ,EAAA,GAQ5BG,EAR4BD,EAAA,GAQjBE,EARiBF,EAAA,GAqBjCxJ,EAEEL,EAFFK,MACQkG,EACNvG,EADFkJ,KAAQ3C,SAGJW,EACJlH,EAAMkJ,KAAKM,SAAWjD,IAAasC,EAAUE,WACzC,oBACA,MACN,OACE9I,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8J,SAAA,KACE/J,EAAAC,EAAAC,cAAA,OAAKE,MAAOA,EAAOG,UAAU,sBAC3BP,EAAAC,EAAAC,cAACkH,EAAD,CACEd,SAAUA,EACV0D,KAAMH,EACN3D,OAAQ,kBAAM4D,GAAc,MAE9B9J,EAAAC,EAAAC,cAAA,OAAKE,MA1BiB,SAAC6J,GAC3B,IAAI7J,EAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAQsI,GAIjB,OAHKsB,IACH7J,EAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAQD,EAAR,CAAe8J,WAAY,YAE3B9J,EAqBS+J,CAAoBpK,EAAMkJ,KAAKM,UAA3C,iBACAvJ,EAAAC,EAAAC,cAAA,OAAKE,MAAO4H,EAAM7H,cAAY,aAC3BmG,GAEHtG,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBAAiBH,MAAO,CAAE6G,oBACvCjH,EAAAC,EAAAC,cAAA,OACEE,MAAO,CACLmI,UAAW,OACXL,aAAc,OACd5I,QAASgH,IAAasC,EAAUE,WAAa,QAAU,OACvDsB,OAAQ,QAGVpK,EAAAC,EAAAC,cAAA,KACEK,UAAU,6BACVH,MAAO,CAAE6G,oBAFX,kDAOFjH,EAAAC,EAAAC,cAAA,OACEK,UAAU,YACVH,MAAO,CACL8J,WACE5D,IAAasC,EAAUE,WAAa,SAAW,UACjD7B,oBAGFjH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OACEE,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAO+H,EAAP,CAAkBG,UAAW,SAClCpI,cAAY,2BAEXJ,EAAMkJ,KAAKE,sBAEdnJ,EAAAC,EAAAC,cAAA,OAAKE,MAAOoI,GAAZ,sBACAxI,EAAAC,EAAAC,cAAA,OAAKE,MAAOqI,IACZzI,EAAAC,EAAAC,cAAA,OAAKE,MAAOoI,GAAZ,8BACAxI,EAAAC,EAAAC,cAAA,OAAKE,MAAOkI,EAAYnI,cAAY,6BACjCJ,EAAMkJ,KAAKC,wBAEdlJ,EAAAC,EAAAC,cAAA,OAAKE,MAAOqI,IACZzI,EAAAC,EAAAC,cAAA,OAAKE,MAAOoI,GAAZ,0BACAxI,EAAAC,EAAAC,cAAA,OACEE,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAOiI,EAAP,CAAmBJ,aAAc,SACtC/H,cAAY,wBAEXJ,EAAMkJ,KAAKI,oBAGdrJ,EAAAC,EAAAC,cAAA,OACEE,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GACA8H,EACAG,EAFA,CAGH1I,WAAY,IACZyK,WAAY,QACZC,YAAa,UAEfnK,cAAY,uBAEXJ,EAAMkJ,KAAKK,kBAVd,SAcJtJ,EAAAC,EAAAC,cAACqK,EAAD,CACE7J,QAAOX,EAAMkJ,KAAKM,QAClB1I,MAAO,kBAAMiJ,GAAc,KAE1BxD,IAAasC,EAAUE,WACpB,eACA,wBCvIH0B,EAAM,CACjB7K,QAAS,OACTC,WAAY,IACZ6K,KAAM,EACNnL,QAAS,OACTC,eAAgB,SAChBE,OAAQ,WAGGiL,EAAY,CACvBC,YAAa,qBAOFC,EAAc,CACzB3D,gBAAiB,UACjBC,MAAO,QAGI2D,EAAO,CAClBvL,QAAS,OACTwL,OAAQ,wBACRC,aAAc,SACd9D,gBAAiB,UACjB+D,SAAU,OACV9C,aAAc,OACd+C,SAAU,SACVjE,OAAQ,aAGGkE,EAAa,CACxB5L,QAAS,OACT0L,SAAU,QCpBNG,SAAO,SAACpL,GAAU,IAAA2J,EAEYC,mBAAS,GAFrBC,EAAAvJ,OAAA2F,EAAA,EAAA3F,CAAAqJ,EAAA,GAEf0B,EAFexB,EAAA,GAEAyB,EAFAzB,EAAA,GAAA0B,EAGU3B,mBAAS5J,EAAMe,UAHzByK,EAAAlL,OAAA2F,EAAA,EAAA3F,CAAAiL,EAAA,GAGfxK,EAHeyK,EAAA,GAGLC,EAHKD,EAAA,GA0BtBE,oBAAU,YAjBmB,SAAC3K,GAC5B,IAAM4K,EAAgB5K,EAASoB,IAAI,SAACyJ,GAAD,OACjCC,IAAMC,aAAaF,EAAO,CAAEG,YAAY,MAE1CN,EAAYE,GAcZK,CAAqBhM,EAAMe,UAC3B,IAR4BA,EAQtBgC,GARsBhC,EAQOf,EAAMe,SANnB8K,IAAMI,SAASC,QAAQnL,GACxBoL,UAFC,SAACC,GAAD,OAAkBA,EAAapM,MAAMqM,YAQvDtJ,GAAS,GACXuI,EAASvI,IAEV,CAAC/C,EAAMe,WAEV,IAUMuL,EAAqB,SAACV,EAAO7I,GAEjC,OAAIsI,IAAkBtI,EACP8I,IAAMC,aAAaF,EAAO,CAAES,UAAU,EAAMrJ,IAAKD,IAGnD8I,IAAMC,aAAaF,EAAO,CAAES,UAAU,EAAOrJ,IAAKD,KAU3DwJ,EAAc,SAACxL,EAAUyL,GAC7B,IAAInM,EAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAQmM,GAUjB,OARID,IAAiBzL,EAAS+E,OAAS,IACrCzF,EAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAQD,EAAUsK,IAGrB6B,IAAiBnB,IACnBhL,EAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAQD,EAAUwK,IAGlBxK,GAGT,OACEJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8J,SAAA,KACE/J,EAAAC,EAAAC,cAAA,OAAKE,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAOoM,IACd3L,EAASoB,IAAI,SAACsI,EAAK1H,GAAN,OACZ9C,EAAAC,EAAAC,cAAA,QACEK,UAAU,MACVH,MAAOkM,EAAYxL,EAAUgC,GAC7BC,IAAKD,EACLlC,QAAS,kBAAMyK,EAASvI,KAEvB0H,EAAIzK,MAAM+B,SAlDC,SAAChB,GACrB,OAAOA,EAASoB,IAAImK,GAsDjBK,CAAc5L,GAAUoB,IAAI,SAACyJ,GAAD,OAAWA,OAMxCgB,EAAkB,CACtB7K,KAAM,GACNsK,UAAU,EACVN,YAAY,GAQRc,EAAM,SAACnD,GACX,IAAM1J,EAAKM,OAAAC,EAAA,EAAAD,CAAA,GAAQsM,EAAoBlD,GAEvC,OACEzJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8J,SAAA,MACIhK,EAAM+L,YAAc9L,EAAAC,EAAAC,cAAA,YAAOH,EAAM+B,MACnC9B,EAAAC,EAAAC,cAAA,OAAKE,MAAO8K,GAAanL,EAAMqM,UAAYrM,EAAMe,siCC1HvD,IAKqB+L,eAInB,SAAAA,IAAc,IAAA9I,EAAA,OAAA1D,OAAA2D,EAAA,EAAA3D,CAAA4D,KAAA4I,IACZ9I,EAAA1D,OAAA6D,EAAA,EAAA7D,CAAA4D,KAAA5D,OAAA8D,EAAA,EAAA9D,CAAAwM,GAAAzI,KAAAH,QAqBF6I,cAAgB,WACd,IADoBC,EACdC,EAAe,IAAIC,IADLC,EAAAC,EAEDpJ,EAAKqB,MAAM6D,MAFV,IAEpB,IAAAiE,EAAAE,MAAAL,EAAAG,EAAAG,KAAAC,MAAoC,KAAzBC,EAAyBR,EAAAxH,MAClCyH,EAAaQ,IAAID,EAAKE,wBAHJ,MAAAC,GAAAR,EAAAS,EAAAD,GAAA,QAAAR,EAAAU,IAKpB,OAAOC,MAAMC,KAAKd,IA3BNjJ,EAkCdgK,WAAa,SAACC,GACZ,OAAOjK,EAAKqB,MAAM6D,KAAKgF,OACrB,SAACC,GAAD,OAAeA,EAAUT,wBAA0BO,KAlCrDjK,EAAKqB,MAAQ,CACX6D,KAAM,IAHIlF,mFAUM,IAAAoC,EAAAlC,KAClBkK,MAnBF,8FAoBKC,KAAK,SAACnF,GAAD,OAAUA,EAAKoF,SACpBD,KAAK,SAACnF,GACL9C,EAAKhB,SAAS,CAAE8D,WAEjBqF,MAAM,SAACZ,GACNa,QAAQC,MAAMd,EAAIe,4CAuBf,IAAAC,EAAAzK,KACD0K,EAAU1K,KAAK6I,gBACrB,OACE9M,EAAAC,EAAAC,cAAC0O,EAAD,KACGD,EAAQzM,IAAI,SACX8L,EACAlL,GAFW,OAIX9C,EAAAC,EAAAC,cAAC2O,EAAD,CACE9L,IAAKD,EACLhB,KAAMkM,EACN5B,SAAUtJ,IAAU8F,EAAUG,eAC9BxI,UACY,IAAVuC,GAAeA,IAAU6L,EAAQ9I,OAAS,EACtC,iBACA,IAGL6I,EAAKX,WAAWC,GACdC,OACC,SAAAa,GAAA,OAAAA,EAAGC,YAAezI,WACHsC,EAAUC,mBAE1B3G,IAAI,SAAC+G,EAAMnG,GAAP,OACH9C,EAAAC,EAAAC,cAAC8O,EAAD,CAAWjM,IAAKD,EAAOmG,KAAMA,EAAK8F,gBAGpC/O,EAAAC,EAAAC,cAAC8O,EAAD,CACE/F,KAAM,CACJ3C,SAAU,cAEZ/F,UAAU,0BA3Ea4G,aCGxB8H,OARf,WACE,OACEjP,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAE4G,OAAQ,SACpBhH,EAAAC,EAAAC,cAACgP,GAAD,CAAW3O,UAAU,eCIP4O,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACPzP,EAAAC,EAAAC,cAACF,EAAAC,EAAMyP,WAAP,KACE1P,EAAAC,EAAAC,cAACyP,GAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5B,KAAK,SAAA6B,GACJA,EAAaC,eAEd5B,MAAM,SAAAE,GACLD,QAAQC,MAAMA,EAAMC","file":"static/js/main.1bdcb6f7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./button.scss\";\r\n// Default button style.\r\nconst defaultStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  transition: \"all 0.1s\",\r\n  cursor: \"pointer\",\r\n  width: \"100%\",\r\n  padding: \"1rem\",\r\n  fontWeight: 500,\r\n  fontSize: \"1.1rem\",\r\n};\r\n\r\n/**\r\n * The componet to render a custom Button.\r\n * @param {object} props : Properties of a react component.\r\n * @returns {React.Component} A button Component with custom styling.\r\n */\r\nconst CustomButton = (props) => {\r\n  const getClassNames = () => {\r\n    let classNames = \"orangeTheme\";\r\n    if (props.solid) {\r\n      classNames += \" solid\";\r\n    }\r\n    return classNames;\r\n  };\r\n  return (\r\n    <button\r\n      data-testid={props[\"data-testid\"]}\r\n      style={{ ...defaultStyle, ...props.style }}\r\n      className={`${getClassNames()} mb-5`}\r\n      onClick={props.click}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from \"react\";\r\nimport { FormGroup, FormLabel, FormControl } from \"react-bootstrap\";\r\n/**\r\n * A react component for Custom Input with label.\r\n * @param {React.props} props : Properties of a component.\r\n * @returns {React.Component} A Component with input and label.\r\n */\r\nexport default function CustomInput(props) {\r\n  const { as, title, ...attrs } = props;\r\n  return (\r\n    <FormGroup as={as}>\r\n      <FormLabel htmlFor={props.id}>\r\n        {props.title}\r\n        {props.required ? <span class=\"text-danger\">*</span> : \"\"}\r\n      </FormLabel>\r\n      <FormControl {...attrs} placeholder={toTitleCase(attrs.name)} />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\n/**\r\n * converts a string into title case.\r\n * @param {string} phrase : Senetent you want to convert into title case(Space separated).\r\n * @returns {string} Space separated title case sentence'\r\n */\r\nconst toTitleCase = (phrase) => {\r\n  return phrase\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(\" \");\r\n};\r\n","import React from \"react\";\r\nimport { FormGroup, Form, FormControl } from \"react-bootstrap\";\r\n\r\n/**\r\n * A react component for Custom Select options with label.\r\n * @param {React.props} props : Properties of a component.\r\n * @returns {React.Component} A Component with select options and label.\r\n */\r\nexport default function CustomSelect(props) {\r\n  const { title, as, id, options, ...otherProps } = props;\r\n  return (\r\n    <FormGroup as={as}>\r\n      <Form.Label htmlFor={id}>\r\n        {title}\r\n        {props.required ? \"*\" : \"\"}\r\n      </Form.Label>\r\n      <FormControl as=\"select\" {...otherProps}>\r\n        {options.map((option, index) => (\r\n          <option key={index}>{option}</option>\r\n        ))}\r\n      </FormControl>\r\n    </FormGroup>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\n/**\r\n * A react component for Custom Checkbox with label.\r\n * @param {React.props} props : Properties of a component.\r\n * @returns {React.Component} A Component with checkbox and label.\r\n */\r\nexport default function CheckBox(props) {\r\n  return <Form.Check inline {...props} type=\"checkbox\" />;\r\n}\r\n","// utility methods.\r\n/**\r\n * Utility method to get which checkbox is checked.\r\n * @param {object} object\r\n * @returns {string}: Keys concatenated with space whose value is true.\r\n */\r\nexport const getObjectDataAsString = (object) => {\r\n  let result = \"\";\r\n  for (const key in object) {\r\n    if (object[key]) {\r\n      result += `${key} `;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Form, FormGroup, FormLabel } from \"react-bootstrap\";\r\nimport CustomInput from \"../custom-input/custom-input\";\r\nimport CustomSelect from \"../custom-select/custom-select\";\r\nimport CheckBox from \"../checkboxes/checkboxes\";\r\nimport { getObjectDataAsString } from \"../utilities/utility-methods\";\r\n\r\n// Default state of Price form.\r\nconst defaultState = {\r\n  email: \"\",\r\n  name: \"\",\r\n  phoneno: \"\",\r\n  noOfLeads: 0,\r\n  totalLeads: 0,\r\n  crm: \"\",\r\n  noOfAgents: 0,\r\n};\r\n\r\nexport default class UserForm extends Component {\r\n  // Object initialization for lead sources checkbox.\r\n  leadSources = {\r\n    zillow: false,\r\n    realtor: false,\r\n    ylopo: false,\r\n    others: false,\r\n  };\r\n\r\n  // Object initialization for how they know us checkboxes.\r\n  howTheyKnowUs = {\r\n    google: false,\r\n    facebook: false,\r\n    email: false,\r\n    friends: false,\r\n    realClosers: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = defaultState;\r\n  }\r\n\r\n  handleLeadSourceChange = (key) => {\r\n    this.leadSources[key] = !this.leadSources[key];\r\n  };\r\n\r\n  handleHowTheyKnowUsCB = (key) => {\r\n    this.howTheyKnowUs[key] = !this.howTheyKnowUs[key];\r\n  };\r\n\r\n  /**\r\n   * The method will handle input chnages by user.\r\n   * @param {event} event\r\n   */\r\n  handleInputChnage = (event) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Overrides default submit behaviour to our needs.\r\n   * @param {event} event\r\n   */\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    let result = \"\";\r\n    for (const [key, value] of Object.entries(this.state)) {\r\n      result += `${key}: ${value}\\n`;\r\n    }\r\n    result += \"Lead Sources: \" + getObjectDataAsString(this.leadSources) + \"\\n\";\r\n    result +=\r\n      \"How they know about us: \" + getObjectDataAsString(this.howTheyKnowUs);\r\n    alert(result);\r\n    this.setState({\r\n      ...defaultState,\r\n    });\r\n    this.props.onHide();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleFormSubmit}>\r\n        <Row>\r\n          <h5>Plan Selected: </h5>\r\n          <p className=\"ml-1\">{this.props.planName}</p>\r\n        </Row>\r\n        <CustomInput\r\n          title=\"Name\"\r\n          type=\"text\"\r\n          onChange={this.handleInputChnage}\r\n          required\r\n          name=\"name\"\r\n          id=\"name\"\r\n          value={this.state.name}\r\n        />\r\n        <Form.Row>\r\n          <CustomInput\r\n            title=\"E-mail Address\"\r\n            type=\"email\"\r\n            value={this.state.email}\r\n            name=\"email\"\r\n            id=\"email\"\r\n            onChange={this.handleInputChnage}\r\n            pattern=\"(.+)@(.+){2,}\\.(.+){2,}\"\r\n            required\r\n            as={Col}\r\n          />\r\n          <CustomInput\r\n            type=\"tel\"\r\n            title=\"Phone No.\"\r\n            value={this.state.phoneno}\r\n            name=\"phoneno\"\r\n            id=\"phone\"\r\n            onChange={this.handleInputChnage}\r\n            pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\"\r\n            required\r\n            as={Col}\r\n          />\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <CustomSelect\r\n            value={this.state.noOfLeads}\r\n            name=\"noOfLeads\"\r\n            id=\"noOfLeads\"\r\n            onChange={this.handleInputChnage}\r\n            options={[\"-\", 10, 20, 30, 40, 50]}\r\n            as={Col}\r\n            title=\"Number of leads you generate in a month\"\r\n          />\r\n          <CustomSelect\r\n            id=\"totalLeads\"\r\n            name=\"totalLeads\"\r\n            value={this.state.totalLeads}\r\n            onChange={this.handleInputChnage}\r\n            title=\"Total leads in your CRM\"\r\n            options={[\"-\", \"0-10\", \"10-20\", \"20-30\", \"30-40\"]}\r\n            as={Col}\r\n          />\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <CustomSelect\r\n            title=\"Which CRM Do you use?\"\r\n            as={Col}\r\n            id=\"crm\"\r\n            name=\"crm\"\r\n            value={this.state.crm}\r\n            onChange={this.handleInputChnage}\r\n            options={[\"-\", \"Squad\", \"Insigthly\", \"Salesforce\"]}\r\n          />\r\n          <CustomSelect\r\n            title=\"No. of Agents\"\r\n            as={Col}\r\n            id=\"noOfAgents\"\r\n            name=\"noOfAgents\"\r\n            value={this.state.noOfAgents}\r\n            onChange={this.handleInputChnage}\r\n            options={[\"-\", 1, 2, 3, 4, 5]}\r\n          />\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <FormLabel>What are your biggest lead sources?</FormLabel>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <FormGroup>\r\n            {[\r\n              { zillow: \"Zillow\" },\r\n              { realtor: \"Realtor\" },\r\n              { ylopo: \"Ylopo\" },\r\n              { others: \"Others\" },\r\n            ].map((source, index) => {\r\n              const [key] = Object.keys(source);\r\n              return (\r\n                <CheckBox\r\n                  key={index}\r\n                  id={key}\r\n                  label={source[key]}\r\n                  onChange={() => this.handleLeadSourceChange(key)}\r\n                />\r\n              );\r\n            })}\r\n          </FormGroup>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <FormLabel>How did you hear about us</FormLabel>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          {[\r\n            { google: \"Google\" },\r\n            { facebook: \"Facebook\" },\r\n            { email: \"Email\" },\r\n            { friends: \"Friends\" },\r\n            { realClosers: \"Real Closers\" },\r\n          ].map((source, index) => {\r\n            const [key] = Object.keys(source);\r\n            return (\r\n              <CheckBox\r\n                key={index}\r\n                id={key}\r\n                label={source[key]}\r\n                onChange={() => this.handleHowTheyKnowUsCB(key)}\r\n              />\r\n            );\r\n          })}\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Control\r\n            type=\"submit\"\r\n            className=\"btn mt-5\"\r\n            style={{\r\n              width: \"fit-content\",\r\n              margin: \"auto\",\r\n              backgroundColor: \"#ef5a35\",\r\n              color: \"#fff\",\r\n            }}\r\n          />\r\n        </Form.Row>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Modal, Container } from \"react-bootstrap\";\r\nimport UserForm from \"../user-form/user-form\";\r\nimport \"./price-card.scss\";\r\n\r\n/**\r\n * The function will render Price card.\r\n * @param {React.props} props : Object with properties(React)\r\n */\r\nexport default function PriceCardModel(props) {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      size=\"lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title\r\n          id=\"contained-modal-title-vcenter\"\r\n          className=\"text-centered\"\r\n        >\r\n          <h4>Get started with SquadVoice</h4>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"show-grid\">\r\n        <Container>\r\n          <UserForm {...props} />\r\n        </Container>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n","export const head = {\r\n  backgroundColor: \"#5A6F90\",\r\n  padding: \"1rem\",\r\n  color: \"white\",\r\n  textTransform: \"capitalize\",\r\n  marginBottom: \"0.5rem\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n};\r\n\r\nexport const bottom = { ...head };\r\n\r\nexport const largeFont = {\r\n  fontSize: \"2rem\",\r\n  fontWeight: \"600\",\r\n  letterSpacing: \"1px\",\r\n};\r\n\r\nexport const mediumFont = {\r\n  fontSize: \"1.2rem\",\r\n  fontWeight: \"500\",\r\n  marginTop: \"-5px\",\r\n  marginBottom: \"0.5rem\",\r\n};\r\n\r\nexport const smallFont = {\r\n  fontSize: \"0.9rem\",\r\n  margin: \"15px 0 15px 0\",\r\n};\r\n\r\nexport const separator = {\r\n  borderBottom: \"2px dashed lightgrey\",\r\n  margin: \"0 5px 0 5px\",\r\n};\r\n\r\nexport const popularPriceCard = {\r\n  backgroundColor: \"rgb(222, 99, 67)\",\r\n  color: \"#FFF\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  padding: \"1rem\",\r\n};\r\n","const CONSTANTS = {\r\n  FILTER_PLAN_NAME: \"Qualified 60\", // Enter the name of the tab you don't want to show on the page\r\n  ENTERPRISE: \"Enterprise\",\r\n  SELECTED_INDEX: 2, // Enter your selected Index here.\r\n};\r\n\r\nexport default CONSTANTS;\r\n","import React, { useState } from \"react\";\r\nimport CustomButton from \"../custom-button/button\";\r\nimport PriceCardModal from \"../price-card-modal/price-card-modal\";\r\nimport {\r\n  bottom,\r\n  head,\r\n  largeFont,\r\n  mediumFont,\r\n  popularPriceCard,\r\n  separator,\r\n  smallFont,\r\n} from \"./price-card.style\";\r\nimport CONSTANTS from \"../utilities/constants\";\r\nimport \"./price-card.scss\";\r\n\r\n// Set default values.\r\nconst defaultProps = {\r\n  data: {\r\n    planName: \"\",\r\n    qualifiedLeadsPerMonth: 0,\r\n    pricePerLiveTransfer: \"\",\r\n    totalQualifiedLeadPrice: \"\",\r\n    totalPlatformPrice: \"\",\r\n    finalPackagePrice: \"\",\r\n    popular: false,\r\n  },\r\n};\r\n\r\nconst PriceCard = (incomingProps) => {\r\n  // add all the props in one object.\r\n  const props = {\r\n    ...defaultProps,\r\n    ...incomingProps,\r\n  };\r\n\r\n  // set a state object.\r\n  const [showModal, setModalState] = useState(false);\r\n\r\n  // Set popular card style to cards.\r\n  const getPopularCardStyle = (isPopular) => {\r\n    let style = { ...popularPriceCard };\r\n    if (!isPopular) {\r\n      style = { ...style, visibility: \"hidden\" };\r\n    }\r\n    return style;\r\n  };\r\n\r\n  // destructure object to use directly.\r\n  const {\r\n    style,\r\n    data: { planName },\r\n  } = props;\r\n\r\n  const backgroundColor =\r\n    props.data.popular || planName === CONSTANTS.ENTERPRISE\r\n      ? \"rgb(242, 242, 242\"\r\n      : \"fff\";\r\n  return (\r\n    <>\r\n      <div style={style} className=\"col-xs-12 col-md-3\">\r\n        <PriceCardModal\r\n          planName={planName}\r\n          show={showModal}\r\n          onHide={() => setModalState(false)}\r\n        />\r\n        <div style={getPopularCardStyle(props.data.popular)}>Most Popular!</div>\r\n        <div style={head} data-testid=\"plan-name\">\r\n          {planName}\r\n        </div>\r\n        <div className=\"body-container\" style={{ backgroundColor }}>\r\n          <div\r\n            style={{\r\n              marginTop: \"30px\",\r\n              marginBottom: \"-7px\",\r\n              display: planName === CONSTANTS.ENTERPRISE ? \"block\" : \"none\",\r\n              height: \"7em\",\r\n            }}\r\n          >\r\n            <p\r\n              className=\"enterprise-box text-center\"\r\n              style={{ backgroundColor }}\r\n            >\r\n              Want more than 80 qualified leads each month?\r\n            </p>\r\n          </div>\r\n          <div\r\n            className=\"container\"\r\n            style={{\r\n              visibility:\r\n                planName === CONSTANTS.ENTERPRISE ? \"hidden\" : \"visible\",\r\n              backgroundColor,\r\n            }}\r\n          >\r\n            <center>\r\n              <div\r\n                style={{ ...largeFont, marginTop: \"30px\" }}\r\n                data-testid=\"price-per-live-transfer\"\r\n              >\r\n                {props.data.pricePerLiveTransfer}\r\n              </div>\r\n              <div style={smallFont}>Per Qualified lead</div>\r\n              <div style={separator} />\r\n              <div style={smallFont}> Qualified Leads Per Month</div>\r\n              <div style={mediumFont} data-testid=\"qualified-leads-per-month\">\r\n                {props.data.qualifiedLeadsPerMonth}\r\n              </div>\r\n              <div style={separator} />\r\n              <div style={smallFont}>Platform Fee Per Month</div>\r\n              <div\r\n                style={{ ...mediumFont, marginBottom: \"15px\" }}\r\n                data-testid=\"total-platform-price\"\r\n              >\r\n                {props.data.totalPlatformPrice}\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  ...bottom,\r\n                  ...mediumFont,\r\n                  fontWeight: 600,\r\n                  marginLeft: \"-15px\",\r\n                  marginRight: \"-15px\",\r\n                }}\r\n                data-testid=\"final-package-price\"\r\n              >\r\n                {props.data.finalPackagePrice}/mo\r\n              </div>\r\n            </center>\r\n          </div>\r\n          <CustomButton\r\n            solid={props.data.popular ? true : false}\r\n            click={() => setModalState(true)}\r\n          >\r\n            {planName === CONSTANTS.ENTERPRISE\r\n              ? \"Get In Touch\"\r\n              : \"Start Your Trial\"}\r\n          </CustomButton>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PriceCard;\r\n","export const tab = {\r\n  padding: \"1rem\",\r\n  fontWeight: 600,\r\n  flex: 1,\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  cursor: \"pointer\",\r\n};\r\n\r\nexport const tabBorder = {\r\n  borderRight: \"2px solid #D1D1D1\",\r\n};\r\n\r\nexport const roundBorder = {\r\n  border: \"1rem solid transparent\",\r\n};\r\n\r\nexport const selectedTab = {\r\n  backgroundColor: \"#5A6F90\",\r\n  color: \"#FFF\",\r\n};\r\n\r\nexport const tabs = {\r\n  display: \"flex\",\r\n  border: \"1px solid transparent\",\r\n  borderRadius: \"0.5rem\",\r\n  backgroundColor: \"#F8F8F8\",\r\n  flexWrap: \"wrap\",\r\n  marginBottom: \"2rem\",\r\n  overflow: \"hidden\",\r\n  margin: \"80px 10px\",\r\n};\r\n\r\nexport const tabContent = {\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  tab as tabStyle,\r\n  tabs as tabsStyle,\r\n  tabBorder,\r\n  selectedTab,\r\n  tabContent,\r\n} from \"./tab.style\";\r\nimport \"./tab.scss\";\r\n\r\n/**\r\n * The component which will render multiple tabs inside it.\r\n * @param {React.props} incomingProps : Group of tabs as children.\r\n * @returns A component which will render all the tabs passed to it.\r\n */\r\nconst Tabs = (props) => {\r\n  // Set local state and hooks.\r\n  const [selectedIndex, setIndex] = useState(0);\r\n  const [children, setChildren] = useState(props.children);\r\n\r\n  /**\r\n   * Update tabs with latest data.\r\n   * @param {React.props.Children} children\r\n   */\r\n  const updateInsideTabsProp = (children) => {\r\n    const childrenClone = children.map((child) =>\r\n      React.cloneElement(child, { insideTabs: true })\r\n    );\r\n    setChildren(childrenClone);\r\n  };\r\n\r\n  /**\r\n   * Find selected tab to highlight it.\r\n   * @param {React.props.Children} children\r\n   */\r\n  const findSelectedTabIndex = (children) => {\r\n    const isTabSelected = (reactElement) => reactElement.props.selected;\r\n    const childrenArray = React.Children.toArray(children);\r\n    return childrenArray.findIndex(isTabSelected);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateInsideTabsProp(props.children);\r\n    const index = findSelectedTabIndex(props.children);\r\n    if (index > -1) {\r\n      setIndex(index);\r\n    }\r\n  }, [props.children]);\r\n\r\n  const getTabContent = (children) => {\r\n    return children.map(updateSelectedProp);\r\n  };\r\n\r\n  /**\r\n   * Update property of seected child.\r\n   * @param {React.props.Children.child} child : input child.\r\n   * @param {number} index: index of current child.\r\n   * @returns {React.props.Children.child} : clone of input child with updated properties.\r\n   */\r\n  const updateSelectedProp = (child, index) => {\r\n    let childClone = child;\r\n    if (selectedIndex === index) {\r\n      childClone = React.cloneElement(child, { selected: true, key: index });\r\n      return childClone;\r\n    }\r\n    childClone = React.cloneElement(child, { selected: false, key: index });\r\n    return childClone;\r\n  };\r\n\r\n  /**\r\n   * The method will return style for the tab passed as index.\r\n   * @param {React.props.Children} children : All tabs as children of tabs component.\r\n   * @param {number} currentIndex : index of child being considered.\r\n   * @returns {object} : Style object for current child.\r\n   */\r\n  const getTabStyle = (children, currentIndex) => {\r\n    let style = { ...tabStyle };\r\n\r\n    if (currentIndex !== children.length - 1) {\r\n      style = { ...style, ...tabBorder };\r\n    }\r\n\r\n    if (currentIndex === selectedIndex) {\r\n      style = { ...style, ...selectedTab };\r\n    }\r\n\r\n    return style;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ ...tabsStyle }}>\r\n        {children.map((tab, index) => (\r\n          <span\r\n            className=\"tab\"\r\n            style={getTabStyle(children, index)}\r\n            key={index}\r\n            onClick={() => setIndex(index)}\r\n          >\r\n            {tab.props.name}\r\n          </span>\r\n        ))}\r\n      </div>\r\n\r\n      {getTabContent(children).map((child) => child)}\r\n    </>\r\n  );\r\n};\r\n\r\n// Default propertu of a tab.\r\nconst tabDefaultProps = {\r\n  name: \"\",\r\n  selected: true,\r\n  insideTabs: false,\r\n};\r\n\r\n/**\r\n * A single Tab component.\r\n * @param {React.Component.props} incomingProps\r\n * @returns {React.Component} : Tab component.\r\n */\r\nconst Tab = (incomingProps) => {\r\n  const props = { ...tabDefaultProps, ...incomingProps };\r\n\r\n  return (\r\n    <>\r\n      {!props.insideTabs && <span>{props.name}</span>}\r\n      <div style={tabContent}>{props.selected && props.children}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Tabs, Tab };\r\n","import React, { Component } from \"react\";\r\nimport PriceCard from \"../price-card/price-card\";\r\nimport { Tab, Tabs } from \"../tab/tab\";\r\nimport CONSTANTS from \"../utilities/constants\";\r\nimport \"./price-page.scss\";\r\nconst DATA_URI =\r\n  \"https://raw.githubusercontent.com/sonutiwari/squad-take-home/master/src/mockdata/data.json\";\r\n/**\r\n * The page will show main content of the website which includes different price ranges and Plans based on chosen categories.\r\n */\r\nexport default class PricePage extends Component {\r\n  /**\r\n   * Constructor.\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Set the data here, for this case we have static data.\r\n   */\r\n  componentDidMount() {\r\n    fetch(DATA_URI)\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        this.setState({ data });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.message);\r\n      });\r\n  }\r\n\r\n  // Get tabs header text array\r\n  getTabHeaders = () => {\r\n    const tabHeaderSet = new Set();\r\n    for (const item of this.state.data) {\r\n      tabHeaderSet.add(item.averageHomePricePoint);\r\n    }\r\n    return Array.from(tabHeaderSet);\r\n  };\r\n\r\n  /**\r\n   * filter tab data of header from data collection\r\n   * @param {string} header - text of header\r\n   */\r\n  getTabData = (header) => {\r\n    return this.state.data.filter(\r\n      (homePrice) => homePrice.averageHomePricePoint === header\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const headers = this.getTabHeaders(); // Get all the headers.\r\n    return (\r\n      <Tabs>\r\n        {headers.map((\r\n          header,\r\n          index // Map headers to tabs.\r\n        ) => (\r\n          <Tab\r\n            key={index}\r\n            name={header}\r\n            selected={index === CONSTANTS.SELECTED_INDEX}\r\n            className={\r\n              index === 0 || index === headers.length - 1\r\n                ? \"rounded-border\"\r\n                : \"\"\r\n            }\r\n          >\r\n            {this.getTabData(header) // filter data of each header.\r\n              .filter(\r\n                ({ planDetails: { planName } }) =>\r\n                  planName !== CONSTANTS.FILTER_PLAN_NAME\r\n              )\r\n              .map((data, index) => (\r\n                <PriceCard key={index} data={data.planDetails} /> // Psedo render tabs(not visible on UI yet unless tab is active.)\r\n              ))}\r\n            {\r\n              <PriceCard /* Enterprise Card which is an outlier. */\r\n                data={{\r\n                  planName: \"Enterprise\",\r\n                }}\r\n                className=\"price-card\"\r\n              />\r\n            }\r\n          </Tab>\r\n        ))}\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PricePage from \"./components/price-page/price-page\";\r\n/**\r\n * Main Page.\r\n */\r\nfunction App() {\r\n  return (\r\n    <div style={{ margin: \"50px\" }}>\r\n      <PricePage className=\"main-box\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// Importing the Bootstrap CSS\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}