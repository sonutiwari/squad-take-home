{"version":3,"sources":["components/custom-button/button.jsx","components/price-card-modal/price-card-modal.jsx","components/price-card/price-card.style.js","components/utilities/constants.js","components/price-card/price-card.jsx","components/tab/tab.style.js","components/tab/tab.jsx","components/price-page/price-page.jsx","App.js","serviceWorker.js","index.js"],"names":["defaultStyle","display","justifyContent","transition","cursor","width","padding","fontWeight","fontSize","CustomButton","props","data-testid","style","height","className","classNames","solid","getClassNames","onClick","click","children","defaultState","email","name","phoneno","noOfLeads","totalLeads","crm","noOfAgents","PriceCardModel","leadSources","zillow","realtor","ylopo","others","howTheyKnowUs","google","facebook","friends","realClosers","handleLeadSourceChange","key","handleHowTheyKnowUsCB","handleInputChnage","event","setState","state","target","value","handleFormSubmit","preventDefault","result","Object","entries","getObjectDataAsString","alert","onHide","object","this","Modal","aria-labelledby","backdrop","keyboard","Header","closeButton","Title","id","margin","Body","Container","onSubmit","Row","planName","htmlFor","marginLeft","type","marginRight","onChange","required","Col","xs","md","pattern","min","flexWrap","marginBottom","backgroundColor","color","Component","head","textTransform","bottom","largeFont","letterSpacing","mediumFont","marginTop","smallFont","separator","borderBottom","popularPriceCard","CONSTANTS","FILTER_PLAN_NAME","ENTERPRISE","SELECTED_INDEX","defaultProps","data","qualifiedLeadsPerMonth","pricePerLiveTransfer","totalQualifiedLeadPrice","totalPlatformPrice","finalPackagePrice","popular","PriceCard","incomingProps","useState","showModal","setModalState","show","onClose","isPopular","visibility","getPopularCardStyle","tab","flex","tabBorder","borderRight","selectedTab","tabs","border","borderRadius","overflow","tabContent","Tabs","selectedIndex","setIndex","setChildren","useEffect","childrenClone","map","child","React","cloneElement","insideTabs","updateInsideTabsProp","index","Children","toArray","findIndex","reactElement","selected","findSelectedTabIndex","updateSelectedProp","getTabStyle","currentIndex","tabStyle","length","tabsStyle","getTabContent","tabDefaultProps","Tab","PricePage","getTabHeaders","tabHeaderSet","Set","item","add","averageHomePricePoint","Array","from","getTabData","header","filter","homePrice","mockdata","planDetails","priceCardStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.23a40913.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./button.scss\";\n\nconst defaultStyle = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  transition: \"all 0.1s\",\n  cursor: \"pointer\",\n  width: \"100%\",\n  padding: \"1rem\",\n  fontWeight: 500,\n  fontSize: \"1.1rem\",\n};\n\nconst CustomButton = (props) => {\n  const getClassNames = () => {\n    let classNames = \"orangeTheme\";\n    if (props.solid) {\n      classNames += \" solid\";\n    }\n    return classNames;\n  };\n  return (\n    <button\n      data-testid={props[\"data-testid\"]}\n      style={{ ...defaultStyle, ...props.style, height: \"3em\" }}\n      className={getClassNames()}\n      onClick={props.click}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default CustomButton;\n","import React, { Component } from \"react\";\nimport { Modal, Container, Row, Col } from \"react-bootstrap\";\n\nconst defaultState = {\n  email: \"\",\n  name: \"\",\n  phoneno: \"\",\n  noOfLeads: 0,\n  totalLeads: 0,\n  crm: \"Squad\",\n  noOfAgents: 0,\n};\n\nclass PriceCardModel extends Component {\n  leadSources = {\n    zillow: false,\n    realtor: false,\n    ylopo: false,\n    others: false,\n  };\n\n  howTheyKnowUs = {\n    google: false,\n    facebook: false,\n    email: false,\n    friends: false,\n    realClosers: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = defaultState;\n  }\n\n  handleLeadSourceChange = (key) => {\n    this.leadSources[key] = !this.leadSources[key];\n  };\n\n  handleHowTheyKnowUsCB = (key) => {\n    this.howTheyKnowUs[key] = !this.howTheyKnowUs[key];\n  };\n\n  handleInputChnage = (event) => {\n    this.setState({\n      ...this.state,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    let result = \"\";\n    for (const [key, value] of Object.entries(this.state)) {\n      result += `${key}: ${value}\\n`;\n    }\n    result +=\n      \"Lead Sources: \" + this.getObjectDataAsString(this.leadSources) + \"\\n\";\n    result +=\n      \"How they know about us: \" +\n      this.getObjectDataAsString(this.howTheyKnowUs);\n    alert(result);\n    this.setState({\n      ...defaultState,\n    });\n    this.props.onHide();\n  };\n\n  getObjectDataAsString(object) {\n    let result = \"\";\n    for (const key in object) {\n      if (object[key]) {\n        result += `${key} `;\n      }\n    }\n    return result;\n  }\n  render() {\n    const props = this.props;\n    return (\n      <Modal\n        {...props}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title\n            id=\"contained-modal-title-vcenter\"\n            style={{ margin: \"auto\" }}\n          >\n            Get started with SquadVoice\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"show-grid\">\n          <Container>\n            <form onSubmit={this.handleFormSubmit}>\n              <Row>\n                <h5>Plan Selected:</h5>\n                <p>{this.props.planName}</p>\n              </Row>\n              <Row>\n                <label htmlFor=\"name\" style={{ marginLeft: \"3.5%\" }}>\n                  Name{\" \"}\n                </label>\n              </Row>\n\n              <Row>\n                <input\n                  type=\"text\"\n                  style={{\n                    width: \"100%\",\n                    marginLeft: \"3.5%\",\n                    marginRight: \"3.5%\",\n                  }}\n                  value={this.state.name}\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={this.handleInputChnage}\n                  required\n                />\n              </Row>\n              <br />\n              <Row>\n                <Col xs={12} md={6}>\n                  <label htmlFor=\"email\">E-mail Address</label>\n                </Col>\n                <Col xs={12} md={6}>\n                  <label htmlFor=\"phone\">Phone No.</label>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col xs={12} md={6}>\n                  <input\n                    type=\"email\"\n                    style={{ width: \"100%\" }}\n                    value={this.state.email}\n                    name=\"email\"\n                    id=\"email\"\n                    onChange={this.handleInputChnage}\n                    pattern=\"(.+)@(.+){2,}\\.(.+){2,}\"\n                    required\n                  />\n                </Col>\n                <Col xs={12} md={6}>\n                  <input\n                    type=\"tel\"\n                    id=\"phone\"\n                    name=\"phoneno\"\n                    style={{ width: \"100%\" }}\n                    value={this.state.phoneno}\n                    pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\"\n                    onChange={this.handleInputChnage}\n                    required\n                  />\n                </Col>\n              </Row>\n              <br />\n              <Row>\n                <Col xs={12} md={6}>\n                  <label htmlFor=\"noOfLeads\">\n                    Number of leads you generate in a month\n                  </label>\n                </Col>\n                <Col xs={12} md={6}>\n                  <label htmlFor=\"totalLeads\">Total leads in your CRM</label>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col xs={12} md={6}>\n                  <input\n                    type=\"number\"\n                    min={0}\n                    style={{ width: \"100%\" }}\n                    value={this.state.noOfLeads}\n                    name=\"noOfLeads\"\n                    id=\"noOfLeads\"\n                    onChange={this.handleInputChnage}\n                    required\n                  />\n                </Col>\n                <Col xs={12} md={6}>\n                  <input\n                    type=\"number\"\n                    id=\"totalLeads\"\n                    name=\"totalLeads\"\n                    style={{ width: \"100%\" }}\n                    value={this.state.totalLeads}\n                    min={0}\n                    onChange={this.handleInputChnage}\n                    required\n                  />\n                </Col>\n              </Row>\n              <br />\n              <Row>\n                <Col xs={12} md={6}>\n                  <label htmlFor=\"crm\">Which CRM Do you use?</label>\n                </Col>\n                <Col xs={12} md={6}>\n                  <label htmlFor=\"noOfAgents\">No. of Agents</label>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col xs={12} md={6}>\n                  <select\n                    name=\"crm\"\n                    value={this.state.crm}\n                    onChange={this.handleInputChnage}\n                  >\n                    <option>Squad</option>\n                    <option>Insigthly</option>\n                    <option>Salesforce</option>\n                  </select>\n                </Col>\n                <Col xs={12} md={6}>\n                  <input\n                    type=\"number\"\n                    id=\"noOfAgents\"\n                    name=\"noOfAgents\"\n                    style={{ width: \"100%\" }}\n                    value={this.state.noOfAgents}\n                    min={0}\n                    onChange={this.handleInputChnage}\n                    required\n                  />\n                </Col>\n              </Row>\n              <br />\n              <Row style={{ marginLeft: \"1%\", marginRight: \"1%\" }}>\n                <label htmlFor=\"totalLeads\">\n                  What are your biggest lead sources?\n                </label>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    marginBottom: \"0.5rem\",\n                  }}\n                >\n                  <input\n                    type=\"checkbox\"\n                    id=\"zillow\"\n                    onChange={() => this.handleLeadSourceChange(\"zillow\")}\n                    style={{ marginRight: \"0.5rem\", marginBottom: \"0.5rem\" }}\n                  />\n                  <label htmlFor=\"zillow\" style={{ marginRight: \"1.5rem\" }}>\n                    {\" \"}\n                    Zillow{\" \"}\n                  </label>\n                  <input\n                    type=\"checkbox\"\n                    id=\"realtor\"\n                    onChange={() => this.handleLeadSourceChange(\"realtor\")}\n                    style={{ marginRight: \"0.5rem\", marginBottom: \"0.5rem\" }}\n                  />\n                  <label htmlFor=\"realtor\" style={{ marginRight: \"1.5rem\" }}>\n                    {\" \"}\n                    Realtor{\" \"}\n                  </label>\n                  <input\n                    type=\"checkbox\"\n                    id=\"ylopo\"\n                    onChange={() => this.handleLeadSourceChange(\"ylopo\")}\n                    style={{ marginRight: \"0.5rem\", marginBottom: \"0.5rem\" }}\n                  />\n                  <label htmlFor=\"ylopo\" style={{ marginRight: \"1.5rem\" }}>\n                    {\" \"}\n                    Ylopo{\" \"}\n                  </label>\n                  <input\n                    type=\"checkbox\"\n                    id=\"others\"\n                    onChange={() => this.handleLeadSourceChange(\"others\")}\n                    style={{ marginRight: \"0.5rem\", marginBottom: \"0.5rem\" }}\n                  />\n                  <label htmlFor=\"others\" style={{ marginRight: \"1.5rem\" }}>\n                    {\" \"}\n                    Others{\" \"}\n                  </label>\n                </div>\n              </Row>\n              <br />\n              <Row style={{ marginLeft: \"1%\", marginRight: \"1%\" }}>\n                <label htmlFor=\"totalLeads\">How did you hear about us</label>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    marginBottom: \"0.5rem\",\n                  }}\n                >\n                  <input\n                    type=\"checkbox\"\n                    id=\"google\"\n                    onChange={() => this.handleHowTheyKnowUsCB(\"google\")}\n                    style={{ marginRight: \"0.5rem\", marginBottom: \"0.5rem\" }}\n                  />\n                  <label htmlFor=\"google\" style={{ marginRight: \"1.5rem\" }}>\n                    {\" \"}\n                    Google{\" \"}\n                  </label>\n                  <input\n                    type=\"checkbox\"\n                    id=\"facebook\"\n                    onChange={() => this.handleHowTheyKnowUsCB(\"facebook\")}\n                    style={{ marginRight: \"0.5rem\", marginBottom: \"0.5rem\" }}\n                  />\n                  <label htmlFor=\"facebook\" style={{ marginRight: \"1.5rem\" }}>\n                    {\" \"}\n                    Facebook{\" \"}\n                  </label>\n                  <input\n                    type=\"checkbox\"\n                    id=\"email\"\n                    onChange={() => this.handleHowTheyKnowUsCB(\"email\")}\n                    style={{ marginRight: \"0.5rem\", marginBottom: \"0.5rem\" }}\n                  />\n                  <label htmlFor=\"email\" style={{ marginRight: \"1.5rem\" }}>\n                    {\" \"}\n                    Email{\" \"}\n                  </label>\n                  <input\n                    type=\"checkbox\"\n                    id=\"friends\"\n                    onChange={() => this.handleHowTheyKnowUsCB(\"friends\")}\n                    style={{ marginRight: \"0.5rem\", marginBottom: \"0.5rem\" }}\n                  />\n                  <label htmlFor=\"friends\" style={{ marginRight: \"1.5rem\" }}>\n                    {\" \"}\n                    Friends{\" \"}\n                  </label>\n                  <input\n                    type=\"checkbox\"\n                    id=\"realClosers\"\n                    onChange={() => this.handleHowTheyKnowUsCB(\"realClosers\")}\n                    style={{ marginRight: \"0.5rem\", marginBottom: \"0.5rem\" }}\n                  />\n                  <label\n                    htmlFor=\"realClosers\"\n                    style={{ marginRight: \"1.5rem\" }}\n                  >\n                    {\" \"}\n                    Real Closers{\" \"}\n                  </label>\n                </div>\n              </Row>\n              <Row>\n                <input\n                  type=\"submit\"\n                  className=\"btn\"\n                  value=\"submit\"\n                  style={{ backgroundColor: \"#ef5a35\", color: \"#fff\" }}\n                />\n              </Row>\n            </form>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default PriceCardModel;\n","export const head = {\n  backgroundColor: \"#5A6F90\",\n  padding: \"1rem\",\n  color: \"white\",\n  textTransform: \"capitalize\",\n  marginBottom: \"0.5rem\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  height: \"3em\",\n};\n\nexport const bottom = { ...head };\n\nexport const largeFont = {\n  fontSize: \"2rem\",\n  fontWeight: \"600\",\n  letterSpacing: \"1px\",\n  height: \"1.2em\",\n};\n\nexport const mediumFont = {\n  fontSize: \"1.2rem\",\n  fontWeight: \"500\",\n  height: \"3em\",\n  marginTop: \"1em\",\n};\n\nexport const smallFont = {\n  fontSize: \"0.9rem\",\n  height: \"0.9em\",\n};\n\nexport const separator = {\n  borderBottom: \"2px dashed lightgrey\",\n  margin: \"1rem 3rem\",\n  height: \"1em\",\n};\n\nexport const popularPriceCard = {\n  backgroundColor: \"rgb(222, 99, 67)\",\n  color: \"#FFF\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  padding: \"1rem\",\n  height: \"3em\",\n};\n","const CONSTANTS = {\n  FILTER_PLAN_NAME: \"Qualified 60\", // Enter the name of the tab you don't want to show on the page\n  ENTERPRISE: \"Enterprise\",\n  SELECTED_INDEX: 2, // Enter your selected Index here.\n};\n\nexport default CONSTANTS;\n","import React, { useState } from \"react\";\nimport CustomButton from \"../custom-button/button\";\nimport PriceCardModal from \"../price-card-modal/price-card-modal\";\nimport {\n  bottom,\n  head,\n  largeFont,\n  mediumFont,\n  popularPriceCard,\n  separator,\n  smallFont,\n} from \"./price-card.style\";\nimport CONSTANTS from \"../utilities/constants\";\n\n// Set default values.\nconst defaultProps = {\n  data: {\n    planName: \"\",\n    qualifiedLeadsPerMonth: 0,\n    pricePerLiveTransfer: \"\",\n    totalQualifiedLeadPrice: \"\",\n    totalPlatformPrice: \"\",\n    finalPackagePrice: \"\",\n    popular: false,\n  },\n};\n\nconst PriceCard = (incomingProps) => {\n  // add all the props in one object.\n  const props = {\n    ...defaultProps,\n    ...incomingProps,\n  };\n\n  // set a state object.\n  const [showModal, setModalState] = useState(false);\n\n  // Set popular card style to cards.\n  const getPopularCardStyle = (isPopular) => {\n    let style = { ...popularPriceCard };\n    if (!isPopular) {\n      style = { ...style, visibility: \"hidden\" };\n    }\n    return style;\n  };\n\n  // destructure object to use directly.\n  const {\n    style,\n    data: { planName },\n  } = props;\n\n  return (\n    <>\n      <div style={style} className=\"col-sm-12 col-md-3\">\n        <PriceCardModal\n          planName={planName}\n          show={showModal}\n          onClose={() => setModalState(false)}\n        />\n        <div style={getPopularCardStyle(props.data.popular)}>Most Popular!</div>\n        <div style={head} data-testid=\"plan-name\">\n          {planName}\n        </div>\n        <center>\n          <div style={{ ...largeFont }} data-testid=\"price-per-live-transfer\">\n            {props.data.pricePerLiveTransfer}\n          </div>\n          <div\n            style={{\n              ...smallFont,\n              visibility:\n                planName === CONSTANTS.ENTERPRISE ? \"hidden\" : \"visible\",\n            }}\n          >\n            Per Qualified lead\n          </div>\n\n          <div\n            style={{\n              ...separator,\n              visibility:\n                planName === CONSTANTS.ENTERPRISE ? \"hidden\" : \"visible\",\n            }}\n          ></div>\n          {planName === CONSTANTS ? (\n            <div style={smallFont}>\n              <br />\n            </div>\n          ) : (\n            \"\"\n          )}\n          <div style={smallFont}>\n            {planName === CONSTANTS.ENTERPRISE\n              ? \"Want more than 80 qualified leads each month?\"\n              : \"Qualified Leads Per Month\"}\n          </div>\n          <div\n            style={{\n              ...mediumFont,\n              visibility:\n                planName === CONSTANTS.ENTERPRISE ? \"hidden\" : \"visible\",\n            }}\n            data-testid=\"qualified-leads-per-month\"\n          >\n            {props.data.qualifiedLeadsPerMonth}\n          </div>\n          {planName === CONSTANTS ? (\n            <div style={smallFont}>\n              <br />\n            </div>\n          ) : (\n            \"\"\n          )}\n          <div\n            style={{\n              ...separator,\n              visibility:\n                planName === CONSTANTS.ENTERPRISE ? \"hidden\" : \"visible\",\n            }}\n          ></div>\n\n          <div\n            style={{\n              ...smallFont,\n              visibility:\n                planName === CONSTANTS.ENTERPRISE ? \"hidden\" : \"visible\",\n            }}\n          >\n            Platform Fee Per Month\n          </div>\n          <div\n            style={{\n              ...mediumFont,\n              marginBottom: \"0.1rem\",\n              visibility:\n                planName === CONSTANTS.ENTERPRISE ? \"hidden\" : \"visible\",\n            }}\n            data-testid=\"total-platform-price\"\n          >\n            {props.data.totalPlatformPrice}\n          </div>\n\n          <div\n            style={{\n              ...bottom,\n              ...mediumFont,\n              fontWeight: 600,\n              visibility:\n                planName === CONSTANTS.ENTERPRISE ? \"hidden\" : \"visible\",\n            }}\n            data-testid=\"final-package-price\"\n          >\n            {props.data.finalPackagePrice}/mo\n          </div>\n          <CustomButton click={() => setModalState(true)}>\n            {\" \"}\n            {planName === CONSTANTS.ENTERPRISE\n              ? \"Get in touch \"\n              : \"Start Your Trial \"}\n          </CustomButton>\n        </center>\n      </div>\n      <PriceCardModal\n        planName={planName}\n        show={showModal}\n        onHide={() => setModalState(false)}\n      />\n    </>\n  );\n};\n\nexport default PriceCard;\n","export const tab = {\n  padding: \"1rem\",\n  fontWeight: 600,\n  flex: 1,\n  display: \"flex\",\n  justifyContent: \"center\",\n  cursor: \"pointer\",\n};\n\nexport const tabBorder = {\n  borderRight: \"2px solid #D1D1D1\",\n};\n\nexport const roundBorder = {\n  border: \"1rem solid transparent\",\n};\n\nexport const selectedTab = {\n  backgroundColor: \"#5A6F90\",\n  color: \"#FFF\",\n};\n\nexport const tabs = {\n  display: \"flex\",\n  border: \"1px solid transparent\",\n  borderRadius: \"0.5rem\",\n  backgroundColor: \"#F8F8F8\",\n  flexWrap: \"wrap\",\n  marginBottom: \"2rem\",\n  overflow: \"hidden\",\n};\n\nexport const tabContent = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  tab as tabStyle,\n  tabs as tabsStyle,\n  tabBorder,\n  selectedTab,\n  tabContent,\n} from \"./tab.style\";\nimport \"./tab.scss\";\n\nconst Tabs = (incomingProps) => {\n  const props = { ...incomingProps };\n  const [selectedIndex, setIndex] = useState(0);\n  const [children, setChildren] = useState(props.children);\n\n  const updateInsideTabsProp = (children) => {\n    const childrenClone = children.map((child) =>\n      React.cloneElement(child, { insideTabs: true })\n    );\n    setChildren(childrenClone);\n  };\n\n  const findSelectedTabIndex = (children) => {\n    const isTabSelected = (reactElement) => reactElement.props.selected;\n    const childrenArray = React.Children.toArray(children);\n    return childrenArray.findIndex(isTabSelected);\n  };\n\n  useEffect(() => {\n    updateInsideTabsProp(props.children);\n    const index = findSelectedTabIndex(props.children);\n    if (index > -1) {\n      setIndex(index);\n    }\n  }, [props.children]);\n\n  const getTabContent = (children) => {\n    return children.map(updateSelectedProp);\n  };\n\n  const updateSelectedProp = (child, index) => {\n    let childClone = child;\n    if (selectedIndex === index) {\n      childClone = React.cloneElement(child, { selected: true, key: index });\n      return childClone;\n    }\n    childClone = React.cloneElement(child, { selected: false, key: index });\n    return childClone;\n  };\n\n  const getTabStyle = (children, currentIndex) => {\n    let style = { ...tabStyle };\n\n    if (currentIndex !== children.length - 1) {\n      style = { ...style, ...tabBorder };\n    }\n\n    if (currentIndex === selectedIndex) {\n      style = { ...style, ...selectedTab };\n    }\n\n    return style;\n  };\n\n  return (\n    <>\n      <div style={{ ...tabsStyle }}>\n        {children.map((tab, index) => (\n          <span\n            className=\"tab\"\n            style={getTabStyle(children, index)}\n            key={index}\n            onClick={() => setIndex(index)}\n          >\n            {tab.props.name}\n          </span>\n        ))}\n      </div>\n\n      {getTabContent(children).map((child) => child)}\n    </>\n  );\n};\n\nconst tabDefaultProps = {\n  name: \"\",\n  selected: true,\n  insideTabs: false,\n};\n\nconst Tab = (incomingProps) => {\n  const props = { ...tabDefaultProps, ...incomingProps };\n\n  return (\n    <>\n      {!props.insideTabs && <span>{props.name}</span>}\n      <div style={tabContent}>{props.selected && props.children}</div>\n    </>\n  );\n};\n\nexport { Tabs, Tab };\n","import React, { Component } from \"react\";\nimport PriceCard from \"../price-card/price-card\";\nimport { Tab, Tabs } from \"../tab/tab\";\nimport mockdata from \"../../mockdata/data.json\";\nimport CONSTANTS from \"../utilities/constants\";\n\n/**\n * The page will show main content of the website which includes different price ranges and Plans based on chosen categories.\n */\nexport default class PricePage extends Component {\n  /**\n   * Constructor.\n   */\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n    };\n  }\n\n  /**\n   * Set the data here, for this case we have static data.\n   */\n  componentDidMount() {\n    this.setState({ data: mockdata });\n  }\n\n  // Get tabs header text array\n  getTabHeaders = () => {\n    const tabHeaderSet = new Set();\n    for (const item of this.state.data) {\n      tabHeaderSet.add(item.averageHomePricePoint);\n    }\n    return Array.from(tabHeaderSet);\n  };\n\n  /**\n   * filter tab data of header from data collection\n   * @param {string} header - text of header\n   */\n  getTabData = (header) => {\n    return this.state.data.filter(\n      (homePrice) => homePrice.averageHomePricePoint === header\n    );\n  };\n\n  render() {\n    return (\n      <Tabs>\n        {this.getTabHeaders().map((header, index) => (\n          <Tab\n            key={index}\n            name={header}\n            selected={index === CONSTANTS.SELECTED_INDEX}\n          >\n            {this.getTabData(header)\n              .filter(\n                ({ planDetails: { planName } }) =>\n                  planName !== CONSTANTS.FILTER_PLAN_NAME\n              )\n              .map((data, index) => (\n                <PriceCard\n                  style={priceCardStyle}\n                  key={index}\n                  data={data.planDetails}\n                />\n              ))}\n            {\n              <PriceCard /* Enterprise Card which is an outlier. */\n                style={priceCardStyle}\n                data={{\n                  planName: \"Enterprise\",\n                }}\n              />\n            }\n          </Tab>\n        ))}\n      </Tabs>\n    );\n  }\n}\n\nconst priceCardStyle = {\n  flex: 1,\n  margin: \"0 1rem\",\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport PricePage from \"./components/price-page/price-page\";\n/**\n * Main Page.\n */\nfunction App() {\n  return <PricePage className=\"main-box\" />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// Importing the Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}